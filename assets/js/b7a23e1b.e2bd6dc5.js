"use strict";(self.webpackChunkdocs_2=self.webpackChunkdocs_2||[]).push([[5010],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(n),m=l,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,i=new Array(a);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4148:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var r=n(7462),l=(n(7294),n(3905));const a={id:"useTextSelection",title:"useTextSelection"},i=void 0,o={unversionedId:"mixins/useTextSelection",id:"mixins/useTextSelection",title:"useTextSelection",description:"Purpose",source:"@site/docs/mixins/use_text_selection.mdx",sourceDirName:"mixins",slug:"/mixins/useTextSelection",permalink:"/stimulus-library/docs/mixins/useTextSelection",draft:!1,tags:[],version:"current",frontMatter:{id:"useTextSelection",title:"useTextSelection"},sidebar:"DocsSidebar",previous:{title:"useTemporaryContent",permalink:"/stimulus-library/docs/mixins/useTemporaryContent"},next:{title:"useTimeout",permalink:"/stimulus-library/docs/mixins/useTimeout"}},s={},c=[{value:"Purpose",id:"purpose",level:2},{value:"Side Effects",id:"side-effects",level:2},{value:"Usage",id:"usage",level:2},{value:"useTextSelection",id:"usetextselection",level:3}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"purpose"},"Purpose"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"useTextSelection")," hook allows you to be notified when a user selects text on the page."),(0,l.kt)("p",null,"This behavior is built on top of the Selection API. See ",(0,l.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Selection_API"},"Selection API")," for more information."),(0,l.kt)("h2",{id:"side-effects"},"Side Effects"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Adds a ",(0,l.kt)("inlineCode",{parentName:"li"},"selectionchange")," event listener to the ",(0,l.kt)("inlineCode",{parentName:"li"},"document")," object.")),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("h3",{id:"usetextselection"},"useTextSelection"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameters"),(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Purpose"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"controller")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Controller")),(0,l.kt)("td",{parentName:"tr",align:null},"The instance of the controller to install the behaviour on. This allows the mixin to automatically register cleanup on the controller's ",(0,l.kt)("inlineCode",{parentName:"td"},"disconnect"),"."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"this"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"handlerFunction")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Function(event)")),(0,l.kt)("td",{parentName:"tr",align:null},"The function that will handle the selection event, receives a single parameter, the ",(0,l.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/API/Selection"},(0,l.kt)("inlineCode",{parentName:"a"},"Selection"))," object representing what the user has currently selected or ",(0,l.kt)("inlineCode",{parentName:"td"},"null")," if they have nothing selected"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useTextSelection } from '@stimulus-library/mixins';\nimport { Controller } from '@hotwired/stimulus';\n\nexport default class extends Controller {\n  connect() {\n    useTextSelection(this, this.selectionChanged);\n  }\n\n  selectionChanged(selection) {\n    if (selection) {\n      console.log('User has selected: ', selection.toString());\n    } else {\n      console.log('User has not selected any text');\n    }\n  }\n}\n\n")))}p.isMDXComponent=!0}}]);